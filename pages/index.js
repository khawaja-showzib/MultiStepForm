import Head from 'next/head'
import { useState } from 'react'
import { useForm } from 'react-hook-form'

export default function Home() {

  const [formStep, setFormStep] = useState(0)
  const { register, handleSubmit, formState: { errors, isValid } } = useForm({ mode: 'all' })
  const MAX_STEPS = 3

  const completeFormStep = () => {
    setFormStep(cur => cur + 1)
  }

  const goToPreviousStep = () => {
    setFormStep(cur => cur - 1)
  }

  const renderButton = () => {
    if (formStep > 2) {
      return undefined
    }

    else if (formStep === 2) {
      return (
        <button disabled={!isValid} type='submit' className='bg-cyan-600 w-full p-3 text-white text-lg mt-5 rounded disabled:bg-gray-400'>Submit</button>
      )
    }

    else {
      return (
        <button disabled={!isValid} type='button' onClick={completeFormStep} className='bg-cyan-600 w-full p-3 text-white text-lg mt-5 rounded disabled:bg-gray-400'>Next Step</button>
      )
    }
  }

  const onHandleSubmit = async (data) => {
    const FormData = data
    fetch('/api/mail', {
      method: "post",
      body: JSON.stringify(FormData)
    })

    console.log(FormData)
    completeFormStep()
  }

  // const onHandleSubmit = async (e) => {
  //   e.preventDefault()
  //   const FormData = {}
  //   Array.from(e.currentTarget.elements).forEach(field => {
  //     if (!field.name) return;
  //     FormData[field.name] = field.value;
  //   })

  //   fetch('/api/mail', {
  //     method: "post",
  //     body: JSON.stringify(FormData)
  //   })

  //   console.log(FormData)
  // }

  return (
    <div>
      <Head>
        <title>Email App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='h-[100vh] bg-gradient-to-tr from-cyan-600 to-cyan-900 flex flex-col justify-center items-center px-3 md:px-0'>
        <div className='mb-10 text-center'>
          <h1 className='font-bold text-6xl text-white mb-3'>
            Contact Form
          </h1>

          <p className='text-lg text-white'>
            Contact form using send grid
          </p>
        </div>

        <div className='bg-white px-3 py-8 md:p-8 rounded w-full md:w-1/3'>
          <form action="post" onSubmit={handleSubmit(onHandleSubmit)}>
            {formStep < MAX_STEPS && <div className='flex flex-wrap items-center gap-2 mb-3'>
              {formStep > 0 && <button type='button' onClick={goToPreviousStep}><svg className='w-6 text-gray-400 hover:text-gray-600' xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
              </svg>
              </button>}
              <p className='text-md font-medium text-gray-600'>Step {formStep + 1} of {MAX_STEPS}</p>
            </div>}
            {formStep === 0 && <section>
              <h3 className='font-bold text-3xl mb-6'>Personal Information</h3>
              <label className='block text-lg font-medium mb-2' htmlFor="username">Username</label>
              <input className='w-full border border-gray-400 p-2 rounded ring-0 ring-cyan-500 outline-none focus:ring-1' type="text" name="username" {...register("username", { required: { value: true, message: "Please type a Username" } })} />
              {errors.username && <p className='text-red-600 text-sm mt-2'>{errors.username.message}</p>}
            </section>}

            {formStep === 1 && <section>
              <h3 className='font-bold text-3xl mb-6'>Billing Information</h3>
              <label className='block text-lg font-medium mb-2' htmlFor="address">Address</label>
              <input className='w-full border border-gray-400 p-2 rounded ring-0 ring-cyan-500 outline-none focus:ring-1' type="text" name="address" {...register("address", { required: { value: true, message: "Please type a Address" } })} />
              {errors.address && <p className='text-red-600 text-sm mt-2'>{errors.address.message}</p>}
            </section>}

            {formStep === 2 && <section>
              <h3 className='font-bold text-3xl mb-6'>Legal Information</h3>
              <div className='flex items-center flex-wrap mb-2'>
                <input type="checkbox" name='toc' className='w-5 h-5 text-green-600 rounded mr-3 border-2 border-gray-300 ring-0 focus:ring-0 focus:ring-offset-0 focus:border-0 cursor-pointer' {...register("toc", { required: true })} />
                <span>
                  I accept the{" "}
                  <a className="text-blue-400 underline" href="#">
                    Terms and Conditions
                  </a>
                  .
                </span>
              </div>

              <div className='flex items-center flex-wrap'>
                <input type="checkbox" name='pp' className='w-5 h-5 text-green-600 rounded mr-3 border-2 border-gray-300 ring-0 focus:ring-0 focus:ring-offset-0 focus:border-0 cursor-pointer' {...register("pp", { required: true })} />
                <span>
                  I accept the{" "}
                  <a className="text-blue-400 underline" href="#">
                    Privacy Policy
                  </a>
                  .
                </span>
              </div>
            </section>}

            {formStep === 3 && <section>
              <h3 className='font-bold text-3xl mb-6'>Congratulations!</h3>
              <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Voluptate nisi deleniti fugit blanditiis fuga officiis rem, deserunt error voluptas odio. Ut consequatur quis impedit, et beatae ipsa! Praesentium, fugiat corporis?</p>
            </section>}
            <div>
              {renderButton()}
            </div>
          </form>
        </div>
      </main>
    </div>
  )
}
